angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/external-options/external-options.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false, \'float\': form.float === true }"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><select ng-model="form.selectedOption" ng-model-options="form.ngModelOptions" ng-disabled="form.readonly" sf-changed="form" ng-change="changed()" class="form-control" schema-validate="form" external-options="" links="form.schema.links" model="model" form="form" ng-options="item.value as item.name for item in form.options"><option ng-show="form.selectedOption" value=""></option></select><div class="help-block" ng-show="(hasError() && errorMessage(schemaError()))" ng-bind-html="(hasError() && errorMessage(schemaError()))"></div></div>')}]),angular.module("schemaForm").directive("externalOptions",function(){return{restrict:"A",require:"ngModel",scope:{form:"=",model:"="},controller:["$scope","$http","$interpolate","sfSelect",function(e,o,r,t){var n,s=e;s.form.options=[],s.currentSource="",s.externalOptions={};var l=function(e,o,r){s.form.options=o.titleMap,s.externalOptions[e]!==o&&(s.externalOptions[e]=o),s.$watch("form.selectedOption",function(){t(s.form.key,s.model,s.form.selectedOption)});for(var n=0;n<s.form.options.length;n++)if(s.form.options[n].value&&r===s.form.options[n].value)return void(s.form.selectedOption=s.form.options[n].value);s.form.selectedOption=null,t(s.form.key,s.model,s.form.selectedOption)},a=function(e){if(s.currentSource!==e||"object"!=typeof s.externalOptions[e]){s.currentSource=e;var r=t(s.form.key,s.model);return"object"==typeof s.externalOptions[e]?void l(e,s.externalOptions[e],r):void o.get(e,{responseType:"json"}).success(function(o){l(e,o,r)}).error(function(){s.form.options=[],s.form.selectedOption=null,t(s.form.key,s.model,s.form.selectedOption)})}};if(s.form.parameters.length)for(var n=0;n<s.form.parameters.length;n++)angular.isDefined(s.form.parameters[n])&&s.$watch(s.form.parameters[n][1],function(e){var o,t;e?(o=r(s.form.optionSource,!1,null,!0),t=o(s),a(t,s.form.key)):s.form.options=[]});else a(s.form.optionSource)}]}}),angular.module("schemaForm").config(["schemaFormProvider","sfPathProvider",function(e,o){var r,t;t=function(t,n,s){if("string"===n.type&&n.links&&"object"==typeof n.links)for(r=0;r<n.links.length;r++)if("options"===n.links[r].rel){var l=/({)([^}]*)(})/gm,a=/{{([^}]*)}}/gm,i=e.stdFormObj(t,n,s);i.key=s.path,i.type="select-external",i.optionSource=n.links[r].href.replace(l,"$1$1$2$3$3"),i.options=[],i.parameters=[];for(var m=i.optionSource.match(a);null!==(m=a.exec(i.optionSource));)i.parameters.push(m);return s.lookup[o.stringify(s.path)]=i,i}},e.defaults.string.unshift(t)}]);