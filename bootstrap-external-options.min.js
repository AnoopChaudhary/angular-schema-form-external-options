angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/external-options/external-options.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false, \'float\': form.float === true }"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><select ng-model="form.selectedOption" ng-model-options="form.ngModelOptions" ng-disabled="form.readonly" sf-changed="form" ng-change="changed()" class="form-control" schema-validate="form" external-options="" links="form.schema.links" model="model" form="form" ng-options="item.value as item.name for item in form.options"><option ng-show="form.selectedOption" value=""></option></select><div class="help-block" ng-show="(hasError() && errorMessage(schemaError()))" ng-bind-html="(hasError() && errorMessage(schemaError()))"></div></div>')}]),angular.module("schemaForm").directive("externalOptions",function(){return{restrict:"A",require:"ngModel",scope:{form:"=",model:"="},controller:["$scope","$http","$interpolate","sfSelect",function(e,o,r,t){var n,s=e;s.form.options=[],s.currentSource="",s.externalOptions={};var i=function(e,o,r){var n=[];if(o["enum"]&&o["enum"].length){for(i=0;i<o["enum"].length;i++)o["enum"][i]&&o["enum"][i].length&&n.push({name:o["enum"][i],value:o["enum"][i]});s.form.options=n}else o.titleMap&&(s.form.options=o.titleMap);s.externalOptions[e]!==o&&(s.externalOptions[e]=o),s.$watch("form.selectedOption",function(){t(s.form.key,s.model,s.form.selectedOption)});for(var i=0;i<s.form.options.length;i++)if("undefined"!=typeof s.form.options[i].value&&r===s.form.options[i].value)return void(s.form.selectedOption=s.form.options[i].value);t(s.form.key,s.model,"")},l=function(e){if(s.currentSource!==e||"object"!=typeof s.externalOptions[e]){s.currentSource=e;var r=t(s.form.key,s.model);return r=r?r:void 0,"object"==typeof s.externalOptions[e]?void i(e,s.externalOptions[e],r):void o.get(e,{responseType:"json"}).success(function(o){i(e,o,r)}).error(function(){s.form.options=[],s.form.selectedOption="",t(s.form.key,s.model,s.form.selectedOption)})}};if(s.form.parameters.length)for(var n=0;n<s.form.parameters.length;n++)angular.isDefined(s.form.parameters[n])&&s.$watch(s.form.parameters[n][1],function(e){var o,t;e?(o=r(s.form.optionSource,!1,null,!0),t=o(s),l(t,s.form.key)):s.form.options=[]});else l(s.form.optionSource)}]}}).filter("_externalOptionUri",["$filter",function(e){function o(o){return e("externalOptionUri")&&(o=e("externalOptionUri")(o)),o}return o}]),angular.module("schemaForm").config(["schemaFormProvider","sfPathProvider",function(e,o){var r,t;t=function(t,n,s){if("string"===n.type&&n.links&&"object"==typeof n.links)for(r=0;r<n.links.length;r++)if("options"===n.links[r].rel){var i=/({)([^}]*)(})/gm,l=/{{([^}]*)}}/gm,a=e.stdFormObj(t,n,s);a.key=s.path,a.type="select-external",a.optionSource=n.links[r].href.replace(i,"$1$1 model.$2 | _externalOptionUri $3$3"),a.options=[],a.parameters=[];for(var m=a.optionSource.match(l);null!==(m=l.exec(a.optionSource));)a.parameters.push(m);return s.lookup[o.stringify(s.path)]=a,a}},e.defaults.string.unshift(t)}]);